




File: ede-targets.info,  Node: Top,  Up: (dir)

Top
***

* Menu:

* ede-target ::
*  ede-cpp-root-target ::
*  ede-emacs-target-c ::
*  ede-emacs-target-el ::
*  ede-emacs-target-misc ::
*  ede-linux-target-c ::
*  ede-linux-target-misc ::
*  ede-maven-target-java ::
*  ede-maven-target-c ::
*  ede-maven-target-misc ::
*  ede-simple-target ::
*  ede-proj-target ::
*   ede-proj-target-makefile ::
*    semantic-ede-proj-target-grammar ::
*    ede-proj-target-makefile-objectcode ::
*     ede-proj-target-makefile-archive ::
*     ede-proj-target-makefile-program ::
*      ede-proj-target-makefile-shared-object ::
*    ede-proj-target-elisp ::
*     ede-proj-target-elisp-autoloads ::
*    ede-proj-target-makefile-miscelaneous ::
*    ede-proj-target-makefile-info ::
*   ede-proj-target-aux ::
*   ede-proj-target-scheme ::
*  project-am-target ::
*   project-am-objectcode ::
*    project-am-program ::
*    project-am-lib ::
*   project-am-header ::
*    project-am-header-noinst ::
*    project-am-header-inst ::
*   project-am-lisp ::
*   project-am-texinfo ::
*   project-am-man ::


File: ede-targets.info,  Node: ede-target,  Next: ede-cpp-root-target,  Up: Targets

ede-target
==========

ede-target

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `ede-target'

                   Children:
                         *Note ede-cpp-root-target::,
                         *Note ede-emacs-target-c::,
                         *Note ede-emacs-target-el::,
                         *Note ede-emacs-target-misc::,
                         *Note ede-linux-target-c::,
                         *Note ede-linux-target-misc::,
                         *Note ede-maven-target-java::,
                         *Note ede-maven-target-c::,
                         *Note ede-maven-target-misc::,
                         *Note ede-simple-target::,
                         *Note ede-proj-target::,
                         *Note project-am-target::.




   Create a new object with name NAME of class type ede-target

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.

    `:source'
          Type: `list'
          Default Value: `nil'

          Source files in this target.

    `:versionsource'
          Type: `list'
          Default Value: `nil'

          Source files with a version string in them.  These files are
          checked for a version string whenever the EDE version of the
          master project is changed.  When strings are found, the
          version previously there is updated.



Specialized Methods
-------------------

 -- Method: ede-preprocessor-map :AFTER this
     Get the pre-processor map for project THIS.

 -- Method: eieio-speedbar-description :AFTER obj
     Provide a speedbar description for OBJ.

 -- Method: project-compile-target :AFTER obj &optional command
     Compile the current target OBJ.  Argument COMMAND is the command
     to use for compiling the target.

 -- Method: project-debug-target :AFTER obj
     Run the current project target OBJ in a debugger.

 -- Method: ede-convert-path :AFTER this path
     Convert path in a standard way for a given project.  Default to
     making it project relative.  Argument THIS is the project to
     convert PATH to.

 -- Method: ede-name :AFTER this
     Return the name of THIS targt.

 -- Method: ede-target-buffer-in-sourcelist :AFTER this buffer source
     Return non-`nil' if object THIS is in BUFFER to a SOURCE list.
     Handles complex path issues.

 -- Method: eieio-speedbar-derive-line-path :AFTER obj &optional depth
     Return the path to OBJ.  Optional DEPTH is the depth we start at.

 -- Method: ede-buffer-header-file :AFTER this buffer
     There are no default header files in EDE.  Do a quick check to see
     if there is a Header tag in this buffer.

 -- Method: project-remove-file :AFTER ot fnnd
     Remove the current buffer from project target OT.  Argument FNND
     is an argument.

 -- Method: ede-buffer-documentation-files :AFTER this buffer
     Check for some documentation files for THIS.  Also do a quick
     check to see if there is a Documentation tag in this BUFFER.

 -- Method: ede-buffer-mine :AFTER this buffer
     Return non-`nil' if object THIS lays claim to the file in BUFFER.

 -- Method: ede-map-target-buffers :AFTER this proc
     For THIS, execute PROC on all buffers belonging to THIS.

 -- Method: eieio-speedbar-child-description :AFTER obj
     Provide a speedbar description for a plain-child of OBJ.  A plain
     child is a child element which is not an EIEIO object.

 -- Method: ede-object-keybindings :BEFORE this
     Retrieves the slot `keybindings' from an object of class
     `ede-target'

 -- Method: ede-description :AFTER this
     Return a description suitable for the minibuffer about THIS.

 -- Method: eieio-speedbar-object-children :AFTER this
     Return the list of speedbar display children for THIS.

 -- Method: ede-system-include-path :AFTER this
     Get the system include path used by project THIS.

 -- Method: ede-object-sourcecode :BEFORE this
     Retrieves the slot `sourcetype' from an object of class
     `ede-target'

 -- Method: ede-expand-filename :AFTER this filename &optional force
     Return a fully qualified file name based on target THIS.  FILENAME
     should a a filename which occurs in a directory in which THIS
     works.  Optional argument FORCE forces the default filename to be
     provided even if it doesn't exist.

 -- Method: ede-menu-items-build :AFTER obj &optional current
     Return a list of menu items for building target OBJ.  If optional
     argument CURRENT is non-`nil', return sub-menu code.

 -- Method: ede-want-file-p :AFTER this file
     Return non-`nil' if THIS target wants FILE.

 -- Method: ede-update-version-in-source :AFTER this version
     In sources for THIS, change version numbers to VERSION.

 -- Method: project-delete-target :AFTER ot
     Delete the current target OT from its parent project.

 -- Method: ede-target-sourcecode :AFTER this
     Return the sourcecode objects which THIS permits.

 -- Method: eieio-speedbar-child-make-tag-lines :AFTER this depth
     Create a speedbar tag line for a child of THIS.  It has depth
     DEPTH.

 -- Method: eieio-speedbar-object-buttonname :AFTER object
     Return a string to use as a speedbar button for OBJECT.

 -- Method: eieio-done-customizing :AFTER target
     Call this when a user finishes customizing TARGET.

 -- Method: project-edit-file-target :AFTER ot
     Edit the target OT associated w/ this file.

 -- Method: ede-documentation :AFTER this
     Return a list of files that provides documentation.  Documentation
     is not for object THIS, but is provided by THIS for other files in
     the project.

 -- Method: ede-want-file-source-p :AFTER this file
     Return non-`nil' if THIS target wants FILE.

 -- Method: ede-want-file-auxiliary-p :AFTER this file
     Return non-`nil' if THIS target wants FILE.

 -- Method: project-add-file :AFTER ot file
     Add the current buffer into project project target OT.  Argument
     FILE is the file to add.

 -- Method: ede-target-name :AFTER this
     Return the name of THIS target, suitable for make or debug style
     commands.

 -- Method: ede-object-menu :BEFORE this
     Retrieves the slot `menu' from an object of class `ede-target'


File: ede-targets.info,  Node: ede-cpp-root-target,  Next: ede-emacs-target-c,  Prev: ede-target,  Up: Targets

ede-cpp-root-target
===================

ede-cpp-root-target

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `ede-cpp-root-target'
                         No children




   Create a new object with name NAME of class type ede-cpp-root-target

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.



Specialized Methods
-------------------

 -- Method: ede-preprocessor-map :AFTER this
     Get the pre-processor map for project THIS.

 -- Method: ede-system-include-path :AFTER this
     Get the system include path used by project THIS.


File: ede-targets.info,  Node: ede-emacs-target-c,  Next: ede-emacs-target-el,  Prev: ede-cpp-root-target,  Up: Targets

ede-emacs-target-c
==================

ede-emacs-target-c

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `ede-emacs-target-c'
                         No children




   Create a new object with name NAME of class type ede-emacs-target-c

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.



Specialized Methods
-------------------

 -- Method: ede-preprocessor-map :AFTER this
     Get the pre-processor map for Emacs C code.  All files need the
     macros from lisp.h!


File: ede-targets.info,  Node: ede-emacs-target-el,  Next: ede-emacs-target-misc,  Prev: ede-emacs-target-c,  Up: Targets

ede-emacs-target-el
===================

ede-emacs-target-el

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `ede-emacs-target-el'
                         No children




   Create a new object with name NAME of class type ede-emacs-target-el

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.




File: ede-targets.info,  Node: ede-emacs-target-misc,  Next: ede-linux-target-c,  Prev: ede-emacs-target-el,  Up: Targets

ede-emacs-target-misc
=====================

ede-emacs-target-misc

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `ede-emacs-target-misc'
                         No children




   Create a new object with name NAME of class type
ede-emacs-target-misc

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.




File: ede-targets.info,  Node: ede-linux-target-c,  Next: ede-linux-target-misc,  Prev: ede-emacs-target-misc,  Up: Targets

ede-linux-target-c
==================

ede-linux-target-c

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `ede-linux-target-c'
                         No children




   Create a new object with name NAME of class type ede-linux-target-c

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.



Specialized Methods
-------------------

 -- Method: ede-preprocessor-map :AFTER this
     Get the pre-processor map for Linux C code.  All files need the
     macros from lisp.h!


File: ede-targets.info,  Node: ede-linux-target-misc,  Next: ede-maven-target-java,  Prev: ede-linux-target-c,  Up: Targets

ede-linux-target-misc
=====================

ede-linux-target-misc

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `ede-linux-target-misc'
                         No children




   Create a new object with name NAME of class type
ede-linux-target-misc

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.




File: ede-targets.info,  Node: ede-maven-target-java,  Next: ede-maven-target-c,  Prev: ede-linux-target-misc,  Up: Targets

ede-maven-target-java
=====================

ede-maven-target-java

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `ede-maven-target-java'
                         No children




   Create a new object with name NAME of class type
ede-maven-target-java

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.




File: ede-targets.info,  Node: ede-maven-target-c,  Next: ede-maven-target-misc,  Prev: ede-maven-target-java,  Up: Targets

ede-maven-target-c
==================

ede-maven-target-c

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `ede-maven-target-c'
                         No children




   Create a new object with name NAME of class type ede-maven-target-c

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.




File: ede-targets.info,  Node: ede-maven-target-misc,  Next: ede-simple-target,  Prev: ede-maven-target-c,  Up: Targets

ede-maven-target-misc
=====================

ede-maven-target-misc

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `ede-maven-target-misc'
                         No children




   Create a new object with name NAME of class type
ede-maven-target-misc

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.




File: ede-targets.info,  Node: ede-simple-target,  Next: ede-proj-target,  Prev: ede-maven-target-misc,  Up: Targets

ede-simple-target
=================

ede-simple-target

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `ede-simple-target'
                         No children




   Create a new object with name NAME of class type ede-simple-target

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.




File: ede-targets.info,  Node: ede-proj-target,  Next: ede-proj-target-makefile,  Prev: ede-simple-target,  Up: Targets

ede-proj-target
===============

ede-proj-target

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `ede-proj-target'

                        Children:
                              *Note ede-proj-target-makefile::,
                              *Note ede-proj-target-aux::,
                              *Note ede-proj-target-scheme::.





   Create a new object with name NAME of class type ede-proj-target

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.

    `:auxsource'
          Type: `list'
          Default Value: `nil'

          Auxilliary source files included in this target.  Each of
          these is considered equivalent to a source file, but it is not
          distributed, and each should have a corresponding rule to
          build it.

    `:compiler'
          Type: `(or null symbol)'
          Default Value: `nil'

          The compiler to be used to compile this object.  This should
          be a symbol, which contains the object defining the compiler.
          This enables save/restore to do so by name, permitting the
          sharing of these compiler resources, and global customization
          thereof.

    `:linker'
          Type: `(or null symbol)'
          Default Value: `nil'

          The linker to be used to link compiled sources for this
          object.  This should be a symbol, which contains the object
          defining the linker.  This enables save/restore to do so by
          name, permitting the sharing of these linker resources, and
          global customization thereof.



Specialized Methods
-------------------

 -- Method: project-compile-target :AFTER obj &optional command
     Compile the current target OBJ.  Argument COMMAND is the command
     to use for compiling the target.

 -- Method: project-rescan :AFTER this readstream
     Rescan target THIS from the read list READSTREAM.

 -- Method: project-debug-target :AFTER obj
     Run the current project target OBJ in a debugger.

 -- Method: ede-proj-configure-add-missing :AFTER this
     Query if any files needed by THIS provided by automake are missing.
     Results in -add-missing being passed to automake.

 -- Method: ede-proj-flush-autoconf :AFTER this
     Flush the configure file (current buffer) to accomodate THIS.  By
     flushing, remove any cruft that may be in the file.  Subsequent
     calls to "ede-proj-tweak-autoconf" can restore items removed by
     flush.

 -- Method: ede-proj-makefile-insert-rules :AFTER this
     Insert rules needed by THIS target.

 -- Method: project-remove-file :AFTER target file
     For TARGET, remove FILE.  FILE must be massaged by
     "ede-convert-path".

 -- Method: ede-buffer-mine :AFTER this buffer
     Return `t' if object THIS lays claim to the file in BUFFER.

 -- Method: ede-proj-configure-create-missing :AFTER this
     Add any missing files for THIS by creating them.

 -- Method: ede-proj-makefile-sourcevar :AFTER this
     Return the variable name for THIS's sources.

 -- Method: ede-proj-makefile-insert-variables :AFTER this &optional
          moresource
     Insert variables needed by target THIS.  Optional argument
     MORESOURCE is a list of additional sources to add to the sources
     variable.

 -- Method: ede-proj-makefile-insert-automake-post-variables :AFTER this
     Insert variables needed by target THIS in Makefile.am after
     SOURCES.

 -- Method: ede-proj-makefile-insert-dist-dependencies :AFTER this
     Insert any symbols that the DIST rule should depend on.  Argument
     THIS is the target that should insert stuff.

 -- Method: ede-proj-linkers :AFTER obj
     List of linkers being used by OBJ.  If the `linker' slot is empty,
     concoct one on a first match found basis for any given type from
     the `availablelinkers' slot.  Otherwise, return the `linker' slot.
     Converts all symbols into the objects to be used.

 -- Method: ede-proj-makefile-garbage-patterns :AFTER this
     Return a list of patterns that are considered garbage to THIS.
     These are removed with make clean.

 -- Method: ede-proj-tweak-autoconf :AFTER this
     Tweak the configure file (current buffer) to accomodate THIS.

 -- Method: ede-proj-compilers :AFTER obj
     List of compilers being used by OBJ.  If the `compiler' slot is
     empty, concoct one on a first match found basis for any given type
     from the `availablecompilers' slot.  Otherwise, return the
     `compiler' slot.  Converts all symbols into the objects to be used.

 -- Method: project-delete-target :AFTER this
     Delete the current target THIS from its parent project.

 -- Method: ede-proj-makefile-target-name :AFTER this
     Return the name of the main target for THIS target.

 -- Method: eieio-done-customizing :AFTER target
     Call this when a user finishes customizing this object.  Argument
     TARGET is the project we are completing customization on.

 -- Method: ede-proj-makefile-insert-user-rules :AFTER this
     Insert user specified rules needed by THIS target.

 -- Method: project-add-file :AFTER this file
     Add to target THIS the current buffer represented as FILE.

 -- Method: ede-proj-makefile-insert-automake-pre-variables :AFTER this
     Insert variables needed by target THIS in Makefile.am before
     SOURCES.

 -- Method: ede-proj-makefile-insert-dist-filepatterns :AFTER this
     Insert any symbols that the DIST rule should depend on.  Argument
     THIS is the target that should insert stuff.

 -- Method: ede-proj-makefile-dependency-files :AFTER this
     Return a list of source files to convert to dependencies.
     Argument THIS is the target to get sources from.

 -- Method: ede-proj-makefile-insert-source-variables :AFTER this
          &optional moresource
     Insert the source variables needed by THIS.  Optional argument
     MORESOURCE is a list of additional sources to add to the sources
     variable.


File: ede-targets.info,  Node: ede-proj-target-makefile,  Next: semantic-ede-proj-target-grammar,  Prev: ede-proj-target,  Up: Targets

ede-proj-target-makefile
========================

ede-proj-target-makefile

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note ede-proj-target::.'

                        `ede-proj-target-makefile'

                             Children:
                                   *Note semantic-ede-proj-target-grammar::,
                                   *Note ede-proj-target-makefile-objectcode::,
                                   *Note ede-proj-target-elisp::,
                                   *Note ede-proj-target-makefile-miscelaneous::,
                                   *Note ede-proj-target-makefile-info::.






   Create a new object with name NAME of class type
ede-proj-target-makefile

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.

    `:makefile'
          Type: `string'
          Default Value: `"Makefile"'

          File name of generated Makefile.

    `:partofall'
          Type: `boolean'
          Default Value: `t'

          Non `nil' means the rule created is part of the all target.
          Setting this to `nil' creates the rule to build this item,
          but does not include it in the ALL`all:' rule.

    `:configuration-variables'
          Type: `list'
          Default Value: `nil'

          Makefile variables appended to use in different
          configurations.  These variables are used in the makefile
          when a configuration becomes active.  Target variables are
          always renamed such as foo_CFLAGS, then included into
          commands where the variable would usually appear.

    `:rules'
          Type: `list'
          Default Value: `nil'

          Arbitrary rules and dependencies needed to make this target.
          It is safe to leave this blank.



Specialized Methods
-------------------

 -- Method: ede-proj-makefile-dependencies :AFTER this
     Return a string representing the dependencies for THIS.  Some
     compilers only use the first element in the dependencies, others
     have a list of intermediates (object files), and others don't care.
     This allows customization of how these elements appear.

 -- Method: project-compile-target :AFTER obj &optional command
     Compile the current target program OBJ.  Optional argument COMMAND
     is the s the alternate command to use.

 -- Method: ede-proj-makefile-insert-rules :AFTER this
     Insert rules needed by THIS target.

 -- Method: ede-proj-makefile-insert-variables :AFTER this &optional
          moresource
     Insert variables needed by target THIS.  Optional argument
     MORESOURCE is a list of additional sources to add to the sources
     variable.

 -- Method: ede-proj-makefile-insert-commands :AFTER this
     Insert the commands needed by target THIS.  For targets, insert
     the commands needed by the chosen compiler.

 -- Method: ede-proj-makefile-configuration-variables :AFTER this
          configuration
     Return a list of configuration variables from THIS.  Use
     CONFIGURATION as the current configuration to query.


File: ede-targets.info,  Node: semantic-ede-proj-target-grammar,  Next: ede-proj-target-makefile-objectcode,  Prev: ede-proj-target-makefile,  Up: Targets

semantic-ede-proj-target-grammar
================================

semantic-ede-proj-target-grammar

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note ede-proj-target::.'

                        `*Note ede-proj-target-makefile::.'

                             `semantic-ede-proj-target-grammar'
                                   No children






   Create a new object with name NAME of class type
semantic-ede-proj-target-grammar

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.



Specialized Methods
-------------------

 -- Method: project-compile-target :AFTER obj
     Compile all sources in a Lisp target OBJ.

 -- Method: ede-proj-makefile-insert-rules :AFTER this
     Insert rules needed by THIS target.

 -- Method: ede-buffer-mine :AFTER this buffer
     Return `t' if object THIS lays claim to the file in BUFFER.  Lays
     claim to all -by.el, and -wy.el files.

 -- Method: ede-proj-makefile-sourcevar :AFTER this
     Return the variable name for THIS's sources.

 -- Method: ede-proj-makefile-insert-dist-dependencies :AFTER this
     Insert dist dependencies, or intermediate targets.  This makes
     sure that all grammar lisp files are created before the dist runs,
     so they are always up to date.  Argument THIS is the target that
     should insert stuff.


File: ede-targets.info,  Node: ede-proj-target-makefile-objectcode,  Next: ede-proj-target-makefile-archive,  Prev: semantic-ede-proj-target-grammar,  Up: Targets

ede-proj-target-makefile-objectcode
===================================

ede-proj-target-makefile-objectcode

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note ede-proj-target::.'

                        `*Note ede-proj-target-makefile::.'

                             `ede-proj-target-makefile-objectcode'

                                  Children:
                                        *Note ede-proj-target-makefile-archive::,
                                        *Note ede-proj-target-makefile-program::.







   Create a new object with name NAME of class type
ede-proj-target-makefile-objectcode

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.

    `:configuration-variables'
          Type: `list'
          Default Value: `("debug" ("CFLAGS" . "-g") ("LDFLAGS" .
          "-g"))'

          *Note ede-proj-target-makefile::.


Specialized Methods
-------------------

 -- Method: ede-buffer-header-file :AFTER this buffer
     There are no default header files.

 -- Method: ede-proj-makefile-sourcevar :AFTER this
     Return the variable name for THIS's sources.

 -- Method: ede-proj-makefile-insert-variables :AFTER this &optional
          moresource
     Insert variables needed by target THIS.  Optional argument
     MORESOURCE is not used.

 -- Method: ede-proj-makefile-dependency-files :AFTER this
     Return a list of source files to convert to dependencies.
     Argument THIS is the target to get sources from.


File: ede-targets.info,  Node: ede-proj-target-makefile-archive,  Next: ede-proj-target-makefile-program,  Prev: ede-proj-target-makefile-objectcode,  Up: Targets

ede-proj-target-makefile-archive
================================

ede-proj-target-makefile-archive

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note ede-proj-target::.'

                        `*Note ede-proj-target-makefile::.'

                             `*Note ede-proj-target-makefile-objectcode::.'

                                  `ede-proj-target-makefile-archive'
                                        No children







   Create a new object with name NAME of class type
ede-proj-target-makefile-archive

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.



Specialized Methods
-------------------

 -- Method: ede-proj-makefile-insert-rules :AFTER this
     Create the make rule needed to create an archive for THIS.

 -- Method: ede-proj-makefile-insert-source-variables :PRIMARY this
     Insert bin_PROGRAMS variables needed by target THIS.  We aren't
     acutally inserting SOURCE details, but this is used by the
     Makefile.am generator, so use it to add this important bin program.


File: ede-targets.info,  Node: ede-proj-target-makefile-program,  Next: ede-proj-target-makefile-shared-object,  Prev: ede-proj-target-makefile-archive,  Up: Targets

ede-proj-target-makefile-program
================================

ede-proj-target-makefile-program

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note ede-proj-target::.'

                        `*Note ede-proj-target-makefile::.'

                             `*Note ede-proj-target-makefile-objectcode::.'

                                  `ede-proj-target-makefile-program'

                                       Children:
                                             *Note ede-proj-target-makefile-shared-object::.








   Create a new object with name NAME of class type
ede-proj-target-makefile-program

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.

    `:ldlibs'
          Type: `list'
          Default Value: `nil'

          Libraries, such as "m" or "Xt" which this program depends on.
          The linker flag "-l" is automatically prepended.  Do not
          include a "lib" prefix, or a ".so" suffix.

          Note: Currently only used for Automake projects.

    `:ldflags'
          Type: `list'
          Default Value: `nil'

          Additional flags to add when linking this target.  Use ldlibs
          to add addition libraries.  Use this to specify specific
          options to the linker.

          Note: Not currently used.  This bug needs to be fixed.



Specialized Methods
-------------------

 -- Method: project-debug-target :AFTER obj
     Debug a program target OBJ.

 -- Method: ede-proj-makefile-insert-rules :AFTER this
     Insert rules needed by THIS target.

 -- Method: ede-proj-makefile-insert-automake-post-variables :AFTER this
     Insert bin_PROGRAMS variables needed by target THIS.

 -- Method: ede-proj-makefile-insert-automake-pre-variables :AFTER this
     Insert bin_PROGRAMS variables needed by target THIS.


File: ede-targets.info,  Node: ede-proj-target-makefile-shared-object,  Next: ede-proj-target-elisp,  Prev: ede-proj-target-makefile-program,  Up: Targets

ede-proj-target-makefile-shared-object
======================================

ede-proj-target-makefile-shared-object

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note ede-proj-target::.'

                        `*Note ede-proj-target-makefile::.'

                             `*Note ede-proj-target-makefile-objectcode::.'

                                  `*Note ede-proj-target-makefile-program::.'

                                       `ede-proj-target-makefile-shared-object'
                                             No children








   Create a new object with name NAME of class type
ede-proj-target-makefile-shared-object

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.



Specialized Methods
-------------------

 -- Method: ede-proj-configure-add-missing :AFTER this
     Query if any files needed by THIS provided by automake are missing.
     Results in -add-missing being passed to automake.

 -- Method: ede-proj-makefile-sourcevar :AFTER this
     Return the variable name for THIS's sources.

 -- Method: ede-proj-makefile-insert-automake-post-variables :AFTER this
     Insert bin_PROGRAMS variables needed by target THIS.  We need to
     override -program which has an LDADD element.

 -- Method: ede-proj-makefile-target-name :AFTER this
     Return the name of the main target for THIS target.

 -- Method: ede-proj-makefile-insert-automake-pre-variables :AFTER this
     Insert bin_PROGRAMS variables needed by target THIS.  We aren't
     acutally inserting SOURCE details, but this is used by the
     Makefile.am generator, so use it to add this important bin program.


File: ede-targets.info,  Node: ede-proj-target-elisp,  Next: ede-proj-target-elisp-autoloads,  Prev: ede-proj-target-makefile-shared-object,  Up: Targets

ede-proj-target-elisp
=====================

ede-proj-target-elisp

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note ede-proj-target::.'

                        `*Note ede-proj-target-makefile::.'

                             `ede-proj-target-elisp'

                                  Children:
                                        *Note ede-proj-target-elisp-autoloads::.







   Create a new object with name NAME of class type
ede-proj-target-elisp

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.

    `:aux-packages'
          Type: `list'
          Default Value: `nil'

          Additional packages needed.  There should only be one
          toplevel package per auxiliary tool needed.  These packages
          location is found, and added to the compile time load path.



Specialized Methods
-------------------

 -- Method: project-compile-target :AFTER obj
     Compile all sources in a Lisp target OBJ.  Bonus: Return a cons
     cell: (COMPILED . UPTODATE).

 -- Method: ede-proj-flush-autoconf :AFTER this
     Flush the configure file (current buffer) to accomodate THIS.

 -- Method: ede-buffer-mine :AFTER this buffer
     Return `t' if object THIS lays claim to the file in BUFFER.  Lays
     claim to all .elc files that match .el files in this target.

 -- Method: ede-proj-makefile-sourcevar :AFTER this
     Return the variable name for THIS's sources.

 -- Method: ede-proj-tweak-autoconf :AFTER this
     Tweak the configure file (current buffer) to accomodate THIS.

 -- Method: ede-update-version-in-source :AFTER this version
     In a Lisp file, updated a version string for THIS to VERSION.
     There are standards in Elisp files specifying how the version
     string is found, such as a `-version' variable, or the standard
     header.


File: ede-targets.info,  Node: ede-proj-target-elisp-autoloads,  Next: ede-proj-target-makefile-miscelaneous,  Prev: ede-proj-target-elisp,  Up: Targets

ede-proj-target-elisp-autoloads
===============================

ede-proj-target-elisp-autoloads

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note ede-proj-target::.'

                        `*Note ede-proj-target-makefile::.'

                             `*Note ede-proj-target-elisp::.'

                                  `ede-proj-target-elisp-autoloads'
                                        No children







   Create a new object with name NAME of class type
ede-proj-target-elisp-autoloads

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.

    `:aux-packages'
          Type: `list'
          Default Value: `("cedet-autogen")'

          *Note ede-proj-target-elisp::.

    `:autoload-file'
          Type: `string'
          Default Value: `"loaddefs.el"'

          The file that autoload definitions are placed in.  There
          should be one load defs file for a given package.  The load
          defs are created for all Emacs Lisp sources that exist in the
          directory of the created target.

    `:autoload-dirs'
          Type: `list'
          Default Value: `nil'

          The directories to scan for autoload definitions.  If `nil'
          defaults to the current directory.



Specialized Methods
-------------------

 -- Method: ede-proj-makefile-dependencies :AFTER this
     Return a string representing the dependencies for THIS.  Always
     return an empty string for an autoloads generator.

 -- Method: project-compile-target :AFTER obj
     Create or update the autoload target.

 -- Method: ede-proj-flush-autoconf :AFTER this
     Flush the configure file (current buffer) to accomodate THIS.

 -- Method: ede-buffer-mine :AFTER this buffer
     Return `t' if object THIS lays claim to the file in BUFFER.  Lays
     claim to all .elc files that match .el files in this target.

 -- Method: ede-proj-makefile-sourcevar :AFTER this
     Return the variable name for THIS's sources.

 -- Method: ede-proj-makefile-insert-dist-dependencies :AFTER this
     Insert any symbols that the DIST rule should depend on.  Emacs
     Lisp autoload files ship the generated .el files.  Argument THIS
     is the target which needs to insert an info file.

 -- Method: ede-proj-tweak-autoconf :AFTER this
     Tweak the configure file (current buffer) to accomodate THIS.

 -- Method: ede-update-version-in-source :AFTER this version
     In a Lisp file, updated a version string for THIS to VERSION.
     There are standards in Elisp files specifying how the version
     string is found, such as a `-version' variable, or the standard
     header.

 -- Method: ede-proj-compilers :AFTER obj
     List of compilers being used by OBJ.  If the `compiler' slot is
     empty, get the car of the compilers list.

 -- Method: ede-proj-makefile-insert-dist-filepatterns :AFTER this
     Insert any symbols that the DIST rule should distribute.  Emacs
     Lisp autoload files ship the generated .el files.  Argument THIS
     is the target which needs to insert an info file.

 -- Method: ede-proj-makefile-insert-source-variables :AFTER this
          &optional moresource
     Insert the source variables needed by THIS.  Optional argument
     MORESOURCE is a list of additional sources to add to the sources
     variable.


File: ede-targets.info,  Node: ede-proj-target-makefile-miscelaneous,  Next: ede-proj-target-makefile-info,  Prev: ede-proj-target-elisp-autoloads,  Up: Targets

ede-proj-target-makefile-miscelaneous
=====================================

ede-proj-target-makefile-miscelaneous

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note ede-proj-target::.'

                        `*Note ede-proj-target-makefile::.'

                             `ede-proj-target-makefile-miscelaneous'
                                   No children






   Create a new object with name NAME of class type
ede-proj-target-makefile-miscelaneous

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.

    `:submakefile'
          Type: `string'
          Default Value: `""'

          Miscellaneous sources which have a specialized makefile.  The
          sub-makefile is used to build this target.



Specialized Methods
-------------------

 -- Method: ede-proj-makefile-insert-rules :AFTER this
     Create the make rule needed to create an archive for THIS.

 -- Method: ede-proj-makefile-sourcevar :AFTER this
     Return the variable name for THIS's sources.

 -- Method: ede-proj-makefile-dependency-files :AFTER this
     Return a list of files which THIS target depends on.


File: ede-targets.info,  Node: ede-proj-target-makefile-info,  Next: ede-proj-target-aux,  Prev: ede-proj-target-makefile-miscelaneous,  Up: Targets

ede-proj-target-makefile-info
=============================

ede-proj-target-makefile-info

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note ede-proj-target::.'

                        `*Note ede-proj-target-makefile::.'

                             `ede-proj-target-makefile-info'
                                   No children






   Create a new object with name NAME of class type
ede-proj-target-makefile-info

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.

    `:mainmenu'
          Type: `string'
          Default Value: `""'

          The main menu resides in this file.  All other sources should
          be included independently.



Specialized Methods
-------------------

 -- Method: ede-proj-configure-add-missing :AFTER this
     Query if any files needed by THIS provided by automake are missing.
     Results in -add-missing being passed to automake.

 -- Method: object-write :AFTER this
     Before committing any change to THIS, make sure the mainmenu is
     first.

 -- Method: ede-proj-makefile-sourcevar :AFTER this
     Return the variable name for THIS's sources.

 -- Method: ede-proj-makefile-insert-dist-dependencies :AFTER this
     Insert any symbols that the DIST rule should depend on.  Texinfo
     files want to insert generated `.info' files.  Argument THIS is
     the target which needs to insert an info file.

 -- Method: ede-proj-makefile-target-name :AFTER this
     Return the name of the main target for THIS target.

 -- Method: ede-documentation :AFTER this
     Return a list of files that provides documentation.  Documentation
     is not for object THIS, but is provided by THIS for other files in
     the project.

 -- Method: ede-proj-makefile-insert-dist-filepatterns :AFTER this
     Insert any symbols that the DIST rule should depend on.  Texinfo
     files want to insert generated `.info' files.  Argument THIS is
     the target which needs to insert an info file.

 -- Method: ede-proj-makefile-insert-source-variables :AFTER this
          &optional moresource
     Insert the source variables needed by THIS info target.  Optional
     argument MORESOURCE is a list of additional sources to add to the
     sources variable.  Does the usual for Makefile mode, but splits
     source into two variables when working in Automake mode.


File: ede-targets.info,  Node: ede-proj-target-aux,  Next: ede-proj-target-scheme,  Prev: ede-proj-target-makefile-info,  Up: Targets

ede-proj-target-aux
===================

ede-proj-target-aux

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note ede-proj-target::.'

                        `ede-proj-target-aux'
                              No children





   Create a new object with name NAME of class type ede-proj-target-aux

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.



Specialized Methods
-------------------

 -- Method: ede-proj-makefile-sourcevar :AFTER this
     Return the variable name for THIS's sources.


File: ede-targets.info,  Node: ede-proj-target-scheme,  Next: project-am-target,  Prev: ede-proj-target-aux,  Up: Targets

ede-proj-target-scheme
======================

ede-proj-target-scheme

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note ede-proj-target::.'

                        `ede-proj-target-scheme'
                              No children





   Create a new object with name NAME of class type
ede-proj-target-scheme

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.

    `:interpreter'
          Type: `string'
          Default Value: `"guile"'

          The preferred interpreter for this code.



Specialized Methods
-------------------

 -- Method: ede-proj-tweak-autoconf :AFTER this
     Tweak the configure file (current buffer) to accomodate THIS.


File: ede-targets.info,  Node: project-am-target,  Next: project-am-objectcode,  Prev: ede-proj-target-scheme,  Up: Targets

project-am-target
=================

project-am-target

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `project-am-target'

                        Children:
                              *Note project-am-objectcode::,
                              *Note project-am-header::,
                              *Note project-am-lisp::,
                              *Note project-am-texinfo::,
                              *Note project-am-man::.





   Create a new object with name NAME of class type project-am-target

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.



Specialized Methods
-------------------

 -- Method: project-compile-target :AFTER obj &optional command
     Compile the current target.  Argument COMMAND is the command to
     use for compiling the target.

 -- Method: project-compile-target-command :AFTER this
     Default target to use when compiling a given target.

 -- Method: project-remove-file :AFTER ot fnnd
     Remove the current buffer from any project targets.

 -- Method: project-make-dist :AFTER this
     Run the current project in the debugger.

 -- Method: project-compile-project :AFTER obj &optional command
     Compile the entire current project.  Argument COMMAND is the
     command to use when compiling.

 -- Method: project-edit-file-target :AFTER obj
     Edit the target associated w/ this file.

 -- Method: project-add-file :AFTER ot
     Add the current buffer into a project.  OT is the object target.
     DIR is the directory to start in.


File: ede-targets.info,  Node: project-am-objectcode,  Next: project-am-program,  Prev: project-am-target,  Up: Targets

project-am-objectcode
=====================

project-am-objectcode

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note project-am-target::.'

                        `project-am-objectcode'

                             Children:
                                   *Note project-am-program::,
                                   *Note project-am-lib::.






   Create a new object with name NAME of class type
project-am-objectcode

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.



Specialized Methods
-------------------

 -- Method: project-am-macro :AFTER this
     Return the default macro to 'edit' for this object type.

 -- Method: project-debug-target :AFTER obj
     Run the current project target in a debugger.

 -- Method: project-compile-target-command :AFTER this
     Default target to use when compiling an object code target.

 -- Method: ede-buffer-header-file :AFTER this buffer
     There are no default header files.

 -- Method: ede-buffer-mine :AFTER this buffer
     Return `t' if object THIS lays claim to the file in BUFFER.


File: ede-targets.info,  Node: project-am-program,  Next: project-am-lib,  Prev: project-am-objectcode,  Up: Targets

project-am-program
==================

project-am-program

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note project-am-target::.'

                        `*Note project-am-objectcode::.'

                             `project-am-program'
                                   No children






   Create a new object with name NAME of class type project-am-program

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.

    `:ldadd
          '
          Default Value: `nil'

          Additional LD args.



Specialized Methods
-------------------

 -- Method: project-rescan :AFTER this
     Rescan object THIS.


File: ede-targets.info,  Node: project-am-lib,  Next: project-am-header,  Prev: project-am-program,  Up: Targets

project-am-lib
==============

project-am-lib

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note project-am-target::.'

                        `*Note project-am-objectcode::.'

                             `project-am-lib'
                                   No children






   Create a new object with name NAME of class type project-am-lib

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.



Specialized Methods
-------------------

 -- Method: project-rescan :AFTER this
     Rescan object THIS.


File: ede-targets.info,  Node: project-am-header,  Next: project-am-header-noinst,  Prev: project-am-lib,  Up: Targets

project-am-header
=================

project-am-header

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note project-am-target::.'

                        `project-am-header'

                             Children:
                                   *Note project-am-header-noinst::,
                                   *Note project-am-header-inst::.






   Create a new object with name NAME of class type project-am-header

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.



Specialized Methods
-------------------

 -- Method: project-rescan :AFTER this
     Rescan the Header sources.


File: ede-targets.info,  Node: project-am-header-noinst,  Next: project-am-header-inst,  Prev: project-am-header,  Up: Targets

project-am-header-noinst
========================

project-am-header-noinst

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note project-am-target::.'

                        `*Note project-am-header::.'

                             `project-am-header-noinst'
                                   No children






   Create a new object with name NAME of class type
project-am-header-noinst

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.



Specialized Methods
-------------------

 -- Method: project-am-macro :AFTER this
     Return the default macro to 'edit' for this object.


File: ede-targets.info,  Node: project-am-header-inst,  Next: project-am-lisp,  Prev: project-am-header-noinst,  Up: Targets

project-am-header-inst
======================

project-am-header-inst

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note project-am-target::.'

                        `*Note project-am-header::.'

                             `project-am-header-inst'
                                   No children






   Create a new object with name NAME of class type
project-am-header-inst

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.



Specialized Methods
-------------------

 -- Method: project-am-macro :AFTER this
     Return the default macro to 'edit' for this object.


File: ede-targets.info,  Node: project-am-lisp,  Next: project-am-texinfo,  Prev: project-am-header-inst,  Up: Targets

project-am-lisp
===============

project-am-lisp

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note project-am-target::.'

                        `project-am-lisp'
                              No children





   Create a new object with name NAME of class type project-am-lisp

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.



Specialized Methods
-------------------

 -- Method: project-am-macro :AFTER this
     Return the default macro to 'edit' for this object.

 -- Method: project-rescan :AFTER this
     Rescan the lisp sources.

 -- Method: ede-buffer-mine :AFTER this buffer
     Return `t' if object THIS lays claim to the file in BUFFER.


File: ede-targets.info,  Node: project-am-texinfo,  Next: project-am-man,  Prev: project-am-lisp,  Up: Targets

project-am-texinfo
==================

project-am-texinfo

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note project-am-target::.'

                        `project-am-texinfo'
                              No children





   Create a new object with name NAME of class type project-am-texinfo

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.

    `:include
          '
          Default Value: `nil'

          Additional texinfo included in this one.



Specialized Methods
-------------------

 -- Method: project-am-macro :AFTER this
     Return the default macro to 'edit' for this object type.

 -- Method: project-rescan :AFTER this
     Rescan object THIS.

 -- Method: project-compile-target-command :AFTER this
     Default target t- use when compling a texinfo file.

 -- Method: ede-buffer-mine :AFTER this buffer
     Return `t' if object THIS lays claim to the file in BUFFER.

 -- Method: ede-documentation :AFTER this
     Return a list of files that provides documentation.  Documentation
     is not for object THIS, but is provided by THIS for other files in
     the project.


File: ede-targets.info,  Node: project-am-man,  Prev: project-am-texinfo,  Up: Targets

project-am-man
==============

project-am-man

Inheritance Tree:

    `eieio-speedbar'

         `eieio-speedbar-directory-button'

              `*Note ede-target::.'

                   `*Note project-am-target::.'

                        `project-am-man'
                              No children





   Create a new object with name NAME of class type project-am-man

Slots:

    `:name'
          Type: `string'

          Name of this target.

    `:path'
          Type: `string'

          The path to the sources of this target.  Relative to the path
          of the project it belongs to.



Specialized Methods
-------------------

 -- Method: project-am-macro :AFTER this
     Return the default macro to 'edit' for this object type.

 -- Method: project-rescan :AFTER this
     Rescan object THIS.

 -- Method: ede-buffer-mine :AFTER this buffer
     Return `t' if object THIS lays claim to the file in BUFFER.

